{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\Reactv1\\\\client\\\\src\\\\components\\\\Sessao3\\\\Sessao3.js\";\nimport React, { Component } from 'react';\nexport default function Sessao3() {\n  return React.createElement(Feed, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  });\n}\nconst categories = ['World', 'Business', 'Tech', 'Sport'];\n\nclass Feed extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: JSON.parse(localStorage.getItem('posts')) || [],\n      filteredPosts: []\n    };\n    this.handleNewPost = this.handleNewPost.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n  }\n\n  handleNewPost(post) {\n    var posts = this.state.posts.concat([post]);\n    this.setState({\n      posts: posts\n    });\n    localStorage.setItem('posts', JSON.stringify(posts));\n  }\n\n  handleFilter(filter) {\n    this.setState({\n      filteredPosts: this.state.posts.filter(post => post.category.toUpperCase() === filter.toUpperCase() || post.content.includes(filter))\n    });\n  }\n\n  render() {\n    const postList = this.state.posts.map((post, index) => React.createElement(Post, {\n      key: index,\n      value: post,\n      content: post.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n    const filteredPosts = this.state.filteredPosts.map((post, index) => React.createElement(Post, {\n      key: index,\n      value: post,\n      content: post.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"feed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Filter, {\n      onFilter: this.handleFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(PostForm, {\n      onSubmit: this.handleNewPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), filteredPosts.length > 0 ? filteredPosts : postList);\n  }\n\n}\n\nclass Filter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n\n    if (event.target.value === '') {\n      this.props.onFilter('');\n    }\n  }\n\n  handleKeyUp(event) {\n    if (event.key === 'Enter') {\n      this.props.onFilter(this.state.value);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"search\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      onKeyUp: this.handleKeyUp,\n      placeHolder: \"Filter by category or content...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass PostForm extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    this.props.onSubmit({\n      category: this.category.value,\n      content: this.content.value\n    });\n    this.category.value = categories[0];\n    this.content.value = '';\n    event.preventDefault();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"psot-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Category:\", React.createElement(\"select\", {\n      ref: input => this.category = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, categories.map((category, index) => React.createElement(\"option\", {\n      key: category,\n      value: category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, category)))), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Content:\", React.createElement(\"input\", {\n      type: \"text\",\n      ref: input => this.content = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nfunction Post(props) {\n  return React.createElement(\"div\", {\n    className: \"post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, props.value.category), React.createElement(\"span\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, props.value.content));\n}","map":{"version":3,"sources":["C:/Projetos/Reactv1/client/src/components/Sessao3/Sessao3.js"],"names":["React","Component","Sessao3","categories","Feed","constructor","props","state","posts","JSON","parse","localStorage","getItem","filteredPosts","handleNewPost","bind","handleFilter","post","concat","setState","setItem","stringify","filter","category","toUpperCase","content","includes","render","postList","map","index","length","Filter","value","handleChange","handleKeyUp","event","target","onFilter","key","PostForm","handleSubmit","onSubmit","preventDefault","input","Post"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default function Sessao3(){\r\n    return(\r\n        <Feed/>\r\n    );    \r\n}\r\n\r\nconst categories = ['World', 'Business', 'Tech', 'Sport']; \r\nclass Feed extends Component{ \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            posts: JSON.parse(localStorage.getItem('posts')) || [],\r\n            filteredPosts: []\r\n        }\r\n        this.handleNewPost = this.handleNewPost.bind(this);\r\n        this.handleFilter = this.handleFilter.bind(this);\r\n    }\r\n    handleNewPost(post){\r\n        var posts = this.state.posts.concat([post]);\r\n        this.setState({posts: posts});\r\n        localStorage.setItem('posts', JSON.stringify(posts));\r\n    }\r\n    handleFilter(filter){\r\n        this.setState({\r\n            filteredPosts: this.state.posts.filter((post) =>\r\n                post.category.toUpperCase() === filter.toUpperCase() ||\r\n                post.content.includes(filter)\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const postList = this.state.posts.map((post, index) =>\r\n            <Post key={index} value={post} content={post.content}/>\r\n        );\r\n        const filteredPosts = this.state.filteredPosts.map((post, index) =>\r\n            <Post key={index} value={post} content={post.content}/>\r\n        );\r\n\r\n        return (\r\n            <div className=\"feed\">\r\n                <Filter onFilter={this.handleFilter}/>\r\n                <PostForm onSubmit={this.handleNewPost}/>\r\n                {filteredPosts.length > 0 ? filteredPosts : postList}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Filter extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {value: ''};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleKeyUp = this.handleKeyUp.bind(this);\r\n    }\r\n\r\n    handleChange(event){\r\n        this.setState({value: event.target.value});\r\n        if(event.target.value ===''){\r\n            this.props.onFilter('');\r\n        }\r\n    }\r\n\r\n    handleKeyUp(event){\r\n        if(event.key === 'Enter'){\r\n            this.props.onFilter(this.state.value);\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <label>\r\n                    <input type='search' value={this.state.value}\r\n                                         onChange={this.handleChange}\r\n                                         onKeyUp={this.handleKeyUp}\r\n                                         placeHolder='Filter by category or content...'\r\n                    />\r\n                </label>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass PostForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleSubmit(event){\r\n        this.props.onSubmit({\r\n            category: this.category.value,\r\n            content: this.content.value\r\n        });\r\n        this.category.value = categories[0];\r\n        this.content.value = '';\r\n        event.preventDefault();\r\n    };\r\n    render(){\r\n        return(\r\n            <div className='psot-form'>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        Category:\r\n                        <select ref={(input) => this.category = input}>\r\n                            {categories.map((category, index) => \r\n                                <option key={category} value={category}>{category}</option>\r\n                            )}\r\n                        </select>\r\n                    </label>\r\n                    <label>\r\n                        Content:\r\n                        <input type='text' ref={(input) => this.content = input}/>\r\n                    </label>\r\n                    <button className='button'>Submit</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nfunction Post(props){\r\n    return(\r\n        <div className=\"post\">\r\n            <span className='label'>{props.value.category}</span>\r\n            <span className='content'>{props.value.content}</span>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}